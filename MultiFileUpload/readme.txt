So my first attempt at this was with a super slick javascript front end that would blow the doors off anything else you've seen.
It... kinda works. Files don't actually upload. What gets uploaded is the name of the file as passed by visualforce. There is no
way to retreive the actual file content when using a regular file upload. You have to use the visualforce inputFile tag, which doesn't support multiple files. I included it as an interested tech demo and should salesforce change apex:inputFile to support multiple files, or allow you to access the filesystem to get the contents of a file uploaded in a regular fileInput, this system could be used. It supports queuing, managment, thumbnails even deleting files after they are uploaded. It's fully skinable using the jQuery skins.  too. Just change the stylesheet in the component to any of the sheets mentioned on http://stackoverflow.com/questions/1348559/are-there-hosted-jquery-ui-themes-anywhere 
I included 2 pics of different themes in my entry folder. To make this one work, we need to get my idea upvoted and implimented.
http://success.salesforce.com/ideaView?c=09a30000000D9xtAAC&id=08730000000ZV8hAAG

Which brings me to my second entry. This one was build on the exellent work done by bob_buzzard. I did a little bit of cleanup, some styling work, and added the ability to delete files after they were uploaded. I won't lie, this thing is not as cool as it could be. Given more time you could build a slick jQuery UI for this, maybe support drag and drop, etc but I kind of ran out of time. After my first failure with the other approach my spirit was kind of broken for this challenge so I just kind of threw this together so I at least had something to turn in. It's functional, like a station wagon. Not stylish, but functional.